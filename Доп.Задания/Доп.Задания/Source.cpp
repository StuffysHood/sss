#include <iostream>
#include <cmath>


using namespace std;

int main() {
	/*
	8.	Из трехзначного числа X вычли его последнюю цифру.
	Когда результат разделили на 10, а к частному слева приписали
	последнюю цифру числа X, то получилось число 237. Найти число X.
	
	int x, y = 237;
	cout << (y % 100*10) + (y - y%100)/100;
	
	9.	Поменяйте местами значения двух переменных.
	
	int x = 5, y = 10, tmp;
	tmp = x;
	x = y;
	y = tmp;
	cout << x << " " << y;
	
	10.	Дано трехзначное число.Замените среднюю цифру на ноль.
		
	int x, y = 896;
	cout << (y - (y % 100)) + (y % 10);

	11.	Дано трехзначное число. Найдите произведение их цифр.
	
	int x = 784;
	cout << (x % 10) * ((x % 100)-(x%10))/10 * ((x-(x%10))/100);

	12.	n-е четное число (первым считается 2, вторым 4 и т.д.)
	
	int n, x;
	cin >> x;
	n = x*2;
	cout << n;

	13.	n-е нечетное число (первое равно 1, второе 3 и т.д.)
	
	int n, x;
	cin >> x;
	n = (x*2)-1;

	14.	В очереди стоят n людей, сколько человек находится между i-м и k-м в очереди.
	
	int i, k;
	cin >> i >> k;
	cout << abs(i - k) - 1;

	15.	Сколько нечетных чисел на отрезке (a, b),
	если a и b – четные? Если a и b – нечетные? a –четное, b – нечетное?
	
	// при a и b четных
	
	int a, b;
	cin >> a >> b;
	(abs(b - a)) / 2; // для a>0 b>0
	(abs(b - abs(a))) / 2; // для a<0 b>0
	(abs(abs(b) - abs(a))) / 2; // для a<0 b<0
	
	// при а и б нечтных
	int a, b;
	cin >> a >> b;
	(abs(b - a) / 2) + 1; // для a>0 b>0
	(abs(b - abs(a)) / 2) + 1; // для a<0 b>0
	(abs(abs(b) - abs(a)) / 2) + 1; // для a<0 b<0
	
	// при а - четное, б - нечетное
	int a, b;
	cin >> a >> b;
	(abs(b - a) + 1) / 2; // для a>0 b>0
	(abs(b - abs(a))) + 1) / 2; // для a<0 b>0
	(abs(abs(b) - abs(a))) + 1) / 2; // для a<0 b<0

	16.	Сколько полных минут и часов содержится в x секундах?
	
	int x; // секунды
	cin >> x;
	cout << floor(x / 60) << " - полные минуты " << endl; // полные минуты
	cout << floor(floor(x / 60)/60) << " - полные часы" << endl; // полные часы
	
	17.	В доме 9 этажей, на каждом этаже одного подъезда по 4 квартиры.
	В каком подъезде, и на каком этаже находится n-я квартира.
	

	int x, y, z; // х - номер квартиры
	cout << "enter flat number ";
	cin >> x;

	y = trunc((x-1) / 36) + 1; // номер подъезда
	z = trunc((x - (y - 1) * 36) / 4)+1; // номер этажа
	
	cout << "porch number is " << y << "\nfloor number is "<< z;

	18.	Вы стоите на краю дороги и от вас до ближайшего фонарного столба x метров.
	Расстояние между столбами y метров.
	На каком расстоянии от вас находится n - й столб ?
	
	int a, x, y, n; /* а - расстояние до н-ного столба, х - расстояние от меня до столба
					у - расстояние между столбами, n - колличество столбов

	cin >> n; // колличество столбов
	cin >> x >> y;
	a = x + y*(n-1);
	cout << a;
	
	19.	Та же ситуация, что и в предыдущей задаче.Длина вашего шага z метров.
	Мимо скольких столбов вы пройдете, сделав n шагов.
	
	float z;  //z - длина шага
	int a, n; //a - столбы, пройденные за шаги. n - колличество шагов.
	int x, y; //x - расстояние между мной и первыи столбом. у - расстояние между столбами
	cin >> z >> n; 
	cin >> x >> y;
	a = trunc(((n*z)-x)/y);

	cout << a;

	/*
	20.	x – вещественное число. Запишите выражение, позволяющее
	выделить его дробную часть.

	float y,x;
	cin >> x;
	y = x - trunc(x);
	cout << y;

	21.	x – вещественное число. Запишите выражение, которое округлит его до сотых долей
	(останется только два знака после запятой).

	float y, x;
	cin >> x;
	y = (trunc(x*100))/100;
	cout << y;

	22.	n – целое число. Запишите выражение, позволяющее узнать его последнюю цифру.

	int n;
	cin >> n;
	cout << n % 10;

	23.	n – четырехзначное целое число.
	Запишите выражение, позволяющее узнать его первую цифру.
	
	int n;
	cin >> n;
	cout << (n - (n % 1000)) / 1000;

	24.	Выразите операцию остаток от деления через другие арифметические операции.
	
	int x, y; // х - вводимое четырехзначное число, у - остаток по делению на 1000

	cin >> x;
	y = x - 1000*(trunc(x / 1000));
	cout << y;

	25.	От бревна длиной L отпиливают куски длиной x.
	Сколько кусков максимально удастся отпилить.
	
	int L, x, n; //L - длина бревна, х - длина отпиливаемого куска n - сколько кусков
	
	cin >> L >> x;
	n = trunc(L / x);
	cout << n;
	*/

	return 0;
}